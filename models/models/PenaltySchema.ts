/* tslint:disable */
/* eslint-disable */
/**
 * PS Note API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SolutionSchema } from './SolutionSchema';
import {
    SolutionSchemaFromJSON,
    SolutionSchemaFromJSONTyped,
    SolutionSchemaToJSON,
} from './SolutionSchema';
import type { Amount } from './Amount';
import {
    AmountFromJSON,
    AmountFromJSONTyped,
    AmountToJSON,
} from './Amount';
import type { CouponSchema } from './CouponSchema';
import {
    CouponSchemaFromJSON,
    CouponSchemaFromJSONTyped,
    CouponSchemaToJSON,
} from './CouponSchema';
import type { MemberSchema } from './MemberSchema';
import {
    MemberSchemaFromJSON,
    MemberSchemaFromJSONTyped,
    MemberSchemaToJSON,
} from './MemberSchema';

/**
 * 
 * @export
 * @interface PenaltySchema
 */
export interface PenaltySchema {
    /**
     * 
     * @type {number}
     * @memberof PenaltySchema
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof PenaltySchema
     */
    day: Date;
    /**
     * 
     * @type {Amount}
     * @memberof PenaltySchema
     */
    amount: Amount;
    /**
     * 
     * @type {boolean}
     * @memberof PenaltySchema
     */
    is_penalty: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PenaltySchema
     */
    manually_edited: boolean;
    /**
     * 
     * @type {MemberSchema}
     * @memberof PenaltySchema
     */
    member: MemberSchema;
    /**
     * 
     * @type {Array<SolutionSchema>}
     * @memberof PenaltySchema
     */
    admitted_solutions: Array<SolutionSchema>;
    /**
     * 
     * @type {Array<SolutionSchema>}
     * @memberof PenaltySchema
     */
    not_admitted_solutions: Array<SolutionSchema>;
    /**
     * 
     * @type {Array<CouponSchema>}
     * @memberof PenaltySchema
     */
    coupons: Array<CouponSchema>;
}

/**
 * Check if a given object implements the PenaltySchema interface.
 */
export function instanceOfPenaltySchema(value: object): value is PenaltySchema {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('day' in value) || value['day'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('is_penalty' in value) || value['is_penalty'] === undefined) return false;
    if (!('manually_edited' in value) || value['manually_edited'] === undefined) return false;
    if (!('member' in value) || value['member'] === undefined) return false;
    if (!('admitted_solutions' in value) || value['admitted_solutions'] === undefined) return false;
    if (!('not_admitted_solutions' in value) || value['not_admitted_solutions'] === undefined) return false;
    if (!('coupons' in value) || value['coupons'] === undefined) return false;
    return true;
}

export function PenaltySchemaFromJSON(json: any): PenaltySchema {
    return PenaltySchemaFromJSONTyped(json, false);
}

export function PenaltySchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PenaltySchema {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'day': (new Date(json['day'])),
        'amount': AmountFromJSON(json['amount']),
        'is_penalty': json['is_penalty'],
        'manually_edited': json['manually_edited'],
        'member': MemberSchemaFromJSON(json['member']),
        'admitted_solutions': ((json['admitted_solutions'] as Array<any>).map(SolutionSchemaFromJSON)),
        'not_admitted_solutions': ((json['not_admitted_solutions'] as Array<any>).map(SolutionSchemaFromJSON)),
        'coupons': ((json['coupons'] as Array<any>).map(CouponSchemaFromJSON)),
    };
}

export function PenaltySchemaToJSON(value?: PenaltySchema | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'day': ((value['day']).toISOString().substring(0,10)),
        'amount': AmountToJSON(value['amount']),
        'is_penalty': value['is_penalty'],
        'manually_edited': value['manually_edited'],
        'member': MemberSchemaToJSON(value['member']),
        'admitted_solutions': ((value['admitted_solutions'] as Array<any>).map(SolutionSchemaToJSON)),
        'not_admitted_solutions': ((value['not_admitted_solutions'] as Array<any>).map(SolutionSchemaToJSON)),
        'coupons': ((value['coupons'] as Array<any>).map(CouponSchemaToJSON)),
    };
}

